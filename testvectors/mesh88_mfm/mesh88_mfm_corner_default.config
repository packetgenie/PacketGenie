# Given the following 4x4 network:
#         0  1  2  3  4  5  6  7
#         8  9 10 11 12 13 14 15
#        16 17 18 19 20 21 22 23
#        24 25 26 27 28 29 30 31
#        32 33 34 35 36 37 38 39
#        40 41 42 43 44 45 46 47
#        48 49 50 51 52 53 54 55
#        56 57 58 59 60 61 62 63
#
# We declare these nodes to be memory nodes:
#   Top-L:   0, 1, 8, 9
#   Top-R:   6, 7, 14, 15
#   Bot-L:  48, 49, 56, 57
#   Bot-R:  54, 55, 62, 63
#   Center: 27, 28, 35, 36
# The rest of the nodes are compute nodes.
#
-topology_type mesh 8 8
-traffic_pattern tp0 uniform 

-traffic_inj_process inj_unifm uniform 0.005
-traffic_inj_process inj_gauss gaussian 3000 0 0.02 500

# Booksim configuration
#-booksim_enable 1
#booksim_config_file mesh88_dor.booksim.config

# Packets
-packet_type write 64 1.0 0
-packet_type read_rqst 8 2.0 1 read_reply
-packet_type_reply read_reply dram 64 16

# Dram configuration "dram0" with 4 banks and service rate of 0.1, arrival rate of 0.5
# Configure "dram0" with clock of 4, timing of 2:2:2:2 and probabilities 0.5:0.5:0.5
# Configure nodes 1, 3, 5, 7 as drams.
-dram_bank_config dram0 4 3 0.2
-dram_timing_config dram0 2 7 7 7 20 0.3 0.3 0.1
-node_config dram_mem dram dram0 { 0 1 8 9 6 7 14 15 48 49 56 57 54 55 62 63 27 28 35 36 }

# Declare communication
-traffic_senders compute { 2-5 10-13 16-26 29-34 37-47 50-53 58-61 }
-traffic_receivers memory { 0 1 8 9 6 7 14 15 48 49 56 57 54 55 62 63 27 28 35 36 }
# Uniform injection of read packets, guassian injection of write packets.
-node_group uniform_read inj_unifm tp0 compute memory < read_rqst >
-node_group gaussian_write inj_gauss tp0 compute memory < write >

# Simulation Parameters
-simclk_step 1 
-simclk_end 100000
-wait_for_replies 

